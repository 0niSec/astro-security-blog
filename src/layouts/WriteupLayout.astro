---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";

type Props = CollectionEntry<"writeup">["data"]; // Will need to change this later

const {
    title,
    description,
    pubDate,
    updatedDate,
    heroImage,
    heroAlt,
    topics,
    os,
    difficulty,
} = Astro.props;

type DificultyColor = {
    [key: string]: string;
};

const difficultyColors: DificultyColor = {
    easy: "#4ADE80",
    medium: "#FACC15",
    hard: "#DC2626",
    insane: "#7F1D1D",
};
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
    </head>

    <body>
        <Header />
        <main>
            <article class="prose">
                <div class="hero-image">
                    {
                        heroImage && (
                            <Image
                                class="not-prose rounded-lg"
                                width={1400}
                                height={1138}
                                src={heroImage}
                                loading="eager"
                                alt={heroAlt}
                            />
                        )
                    }
                </div>

                <div class="title">
                    <div class="date">
                        <FormattedDate date={pubDate} />
                        {
                            updatedDate && (
                                <div class="last-updated-on">
                                    Last updated on{" "}
                                    <FormattedDate date={updatedDate} />
                                </div>
                            )
                        }
                    </div>
                    <h1 class="mb-6">{title}</h1>
                    <div id="tags-row" class="flex space-x-2 mb-8">
                        {
                            topics.map((topic: string) => (
                                <span class="text-xs p-2 bg-zinc-600 rounded-3xl">
                                    {topic}
                                </span>
                            ))
                        }
                    </div>
                </div>
                <h5 class="mb-2">Box Details</h5>
                <div
                    id="box-details"
                    class="grid justify-between items-center not-prose grid-cols-2"
                >
                    <div class="flex items-center">
                        <span
                            id="difficulty-circle"
                            class=`rounded-full w-4 h-4 border-[0.5px] border-neutral-200`
                            style={{
                                backgroundColor:
                                    difficultyColors[difficulty.toLowerCase()],
                            }}
                        >
                        </span>
                        <span id="difficulty-text" class="ml-2"
                            >{difficulty}</span
                        >
                    </div>
                    <div class="flex col-start-2 items-center">
                        <img
                            class="w-8"
                            src={os === "Linux"
                                ? "/images/LinuxIcon.webp"
                                : "/images/WindowsIcon.webp"}
                            alt="OS Icon"
                            width={48}
                            height={48}
                        />
                        <span class="ml-2">{os}</span>
                    </div>
                </div>
                <p>{description}</p>
                <hr />
                <slot />
            </article>
        </main>
        <Footer />
    </body>
</html>
